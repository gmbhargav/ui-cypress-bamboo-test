{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-04-25T05:46:35.122Z",
    "end": "2025-04-25T05:47:21.827Z",
    "duration": 46705,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8e5e1b9a-c78d-451f-920c-60177ea92e9d",
      "title": "",
      "fullFile": "cypress/e2e/tests/003_wishlist_checkout.cy.js",
      "file": "cypress/e2e/tests/003_wishlist_checkout.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a60c446a-434b-4569-a677-6d6f1433953d",
          "title": "Wishlist Functionality and Checkout",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add products to wishlist and checkout from wishlist",
              "fullTitle": "Wishlist Functionality and Checkout should add products to wishlist and checkout from wishlist",
              "timedOut": null,
              "duration": 46601,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"/003_wishlist_checkout.cy.js/Wishlist Functionality and Checkout -- should add products to wishlist and checkout from wishlist (failed).png\"\n    ]\n  ]\n}",
              "code": "// 1. Add products to wishlist\nproducts.forEach(product => {\n  homePage.searchProduct(product.name);\n  homePage.selectProduct(product.name);\n  productPage.selectSize(product.size);\n  productPage.selectColor(product.color);\n  Cypress.on('uncaught:exception', (err, runnable) => {\n    // Ignore this specific error\n    if (err.message.includes('AddFotoramaVideoEvents')) {\n      return false; // prevent Cypress from failing the test\n    }\n    // return true for other errors so they still fail the test\n    return true;\n  });\n  productPage.addToWishlist();\n  productPage.verifyAddToWishlistSuccess(product.name);\n  // Continue browsing unless it's the last product\n  //   if (product !== this.products[this.products.length - 1]) {\n  //     cy.go('back');\n  //   }\n});\n// 2. Navigate to wishlist\nwishlistPage.navigateToWishlist();\n// 3. Verify all products are in wishlist\nproducts.forEach(product => {\n  wishlistPage.verifyProductInWishlist(product.name);\n});\n// 4. Add all wishlist items to cart\nwishlistPage.addAllToCart();\n// 5. Verify success message and navigate to cart\nproductPage.getSuccessMessage().should('contain', 'product(s) have been added to shopping cart');\nhomePage.goToCart();\n// 6. Verify products in cart\nproducts.forEach(product => {\n  cartPage.getProductNames().then(productNames => {\n    expect(productNames).to.include(product.name);\n  });\n});\n// Calculate expected totals\nconst subtotal = products.reduce((sum, product) => sum + product.price * product.quantity, 0);\n// const grandTotal = parseFloat((subtotal).toFixed(2));\n// 7. Verify price calculations\ncartPage.getSubtotal().then($el => {\n  const displayedSubtotal = parseFloat($el.text().replace('$', ''));\n  expect(displayedSubtotal).to.eq(subtotal);\n});\n// Proceed to checkout\ncartPage.proceedToCheckout();\n// 8. Fill shipping information\ncheckoutPage.fillShippingAddress({\n  firstName: 'Test',\n  lastName: 'User',\n  street1: '123 Main St',\n  city: 'New York',\n  state: 'New York',\n  zip: '10001',\n  country: 'United States',\n  phone: '5551234567'\n});\n// 9. Place order\ncheckoutPage.selcteNextButton();\ncheckoutPage.placeOrder();\n// Verify success page\ncheckoutPage.getSuccessMessage().should('contain', 'Thank you for your purchase!');\ncheckoutPage.getOrderNumber().should('exist');\n// 11. Verify wishlist is now empty\nwishlistPage.navigateToWishlist();\nwishlistPage.verifyWishlistEmpty();",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected <button.action.tocart> not to exist in the DOM, but it was continuously found.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected <button.action.tocart> not to exist in the DOM, but it was continuously found.\n    at WishlistPage.addAllToCart (webpack://ui-cypress-bamboo-test/./cypress/e2e/pages/WishlistPage.js:39:9)\n    at Context.eval (webpack://ui-cypress-bamboo-test/./cypress/e2e/tests/003_wishlist_checkout.cy.js:71:19)",
                "diff": null
              },
              "uuid": "fe77cfa9-896e-413c-ac2e-36304b6b001b",
              "parentUUID": "a60c446a-434b-4569-a677-6d6f1433953d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fe77cfa9-896e-413c-ac2e-36304b6b001b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 46601,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportTitle": "Magento Test Report",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true,
        "screenshots": true,
        "embedScreenshots": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "6.2.0"
    }
  }
}